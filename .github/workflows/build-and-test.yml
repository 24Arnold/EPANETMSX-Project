# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Build and Test MSX
on:
  push:
    branches: [ master, triplet_build ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build, Unit Testing, and Regression Testing
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            cmake_generator: /g "Visual Studio 16 2019" /A "x64"
            continue-on-error: false
          - os: ubuntu-latest
            cmake_generator: -G "Unix Makefiles"
            continue-on-error: false
          - os: macos-latest
            cmake_generator: -G "Xcode"
            continue-on-error: false
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.continue-on-error }}
    environment: testing
    # defaults:
    #   run:
    #     shell: ${{ matrix.defaults.run.shell }}
    #     working-directory: ${{ matrix.defaults.run.working-directory }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -B .\build -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_generator }}.

    - name: Upload artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: build-test-artifacts
        path: build/*.*